name: linter

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  "flake8":
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.0"
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-2
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-key
            ${{ runner.os }}-
            ${{ runner.os }}-restore
            ${{ runner.os }}-restore-pip
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip flake8 wheel setuptools
          python3 -m pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python3 -m flake8 .
  "mypy":
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.0"
      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-2
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-key
            ${{ runner.os }}-
            ${{ runner.os }}-restore
            ${{ runner.os }}-restore-pip
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip mypy
      - name: Mypy
        run: |
          python3 -m mypy --strict --namespace-packages src
          [ -d ./bin ] && python3 -m mypy --strict --namespace-packages bin || echo "No .pyi files found in /bin"
